actor Client
participant Server
participant Handler
participant Service
participant DataAccess
database db

entryspacing 0.9
group #navy Registration #white
Client -> Server: [POST] /user\n{"username":" ", "password":" ", "email":" "}
Server -> Handler: {"username":" ", "password":" ", "email":" "}
Handler -> Service: register(RegisterRequest)
Service -> DataAccess: getUser(username)
DataAccess -> db:Find UserData by username
DataAccess --> Service: null
Service -> DataAccess:createUser(userData)
DataAccess -> db:Add UserData
Service -> DataAccess:createAuth(authData)
DataAccess -> db:Add AuthData
Service --> Handler: RegisterResult
Handler --> Server: {"username" : " ", "authToken" : " "}
Server --> Client: 200\n{"username" : " ", "authToken" : " "}
end

group #orange Login #white
Client -> Server: [POST] /session\n{username, password}
Server -> Handler: { "username":"", "password":"" }
Handler -> Service: login(LoginRequest) 
Service ->DataAccess: getUser(username)
DataAccess -> db: Find UserData by username, password
db -->DataAccess: UserData
DataAccess --> Service: username, password

Service -> DataAccess: createAuth(username)
DataAccess -> db: Add AuthData
DataAccess --> Service: AuthData
Service-->Handler: LoginResult
Handler --> Server: {"username" : " ", "authToken" : " "}
Server --> Client: 200\n{"username" : " ", "authToken" : " "}


end

group #green Logout #white
Client -> Server: [DELETE] /session\nauthToken
Server->Handler: logout(authToken)
Handler -> Service: logout(logoutRequest)
Service->DataAccess: getUser(authToken)
DataAccess -> db: Find authData
DataAccess --> Service: authData 
Service-> DataAccess: deleteAuth(authToken)
DataAccess -> db: Remove AuthData
Service--> Handler: LogoutResult
Handler --> Server: {" "}
Server --> Client: 200\n{ } 
end

group #red List Games #white
Client -> Server: [GET] /game\nauthToken
Server->Handler: listGames(authToken)
Handler -> Service: list(ListRequest)
Service->DataAccess: getUser(authToken)
DataAccess -> db: Find authData
DataAccess-->Service: authData
Service->DataAccess: listGames
DataAccess -> db: Find GameData
db --> DataAccess: GameData
DataAccess --> Service: GameData
Service --> Handler: ListResult
Handler -->Server: { "games": [{"gameID": 1234, "whiteUsername":"", "blackUsername":"", "gameName:""} ]}
Server --> Client: 200\n { "games": [{"gameID": 1234, "whiteUsername":"", "blackUsername":"", "gameName:""} ]}
end

group #purple Create Game #white
Client -> Server: [POST] /game\nauthToken\n{gameName}
Server -> Handler: createGame(authToken, { "gameName":"" })
Handler -> Service:create(CreateRequest)
Service->DataAccess: getUser(authToken)
DataAccess -> db: Find authData
DataAccess-->Service: authData
Service->DataAccess: createGame(gameName)
DataAccess -> db: Add GameData
db --> DataAccess:gameID
DataAccess --> Service: gameID
Service --> Handler:CreateResult
Handler --> Server: { "gameID": 1234 }
Server --> Client: 200\n { "gameID": 1234 }


end

group #yellow Join Game #black
Client -> Server: [PUT] /game\nauthToken\n{playerColor, gameID}
Server -> Handler: joinGame(authToken,{ "playerColor":"WHITE/BLACK", "gameID": 1234 })
Handler -> Service: join(JoinRequest)
Service -> DataAccess: getUser(authToken)
DataAccess -> db: Find authData
DataAccess --> Service: authData
Service -> DataAccess:getGame(gameID)
DataAccess -> db: Find GameData by game
db--> DataAccess: GameData
DataAccess --> Service: GameData
Service -> DataAccess: updateGame()
DataAccess -> db: updateGame and Database
DataAccess --> Service: null
Service--> Handler: JoinResult
Handler --> Server: { }
Server --> Client: 200 \n {""}
end

group #gray Clear application #white
Client -> Server: [DELETE] /db
Server -> Handler: clearApplication()
Handler-> Service: clear()
Service -> DataAccess: removeAllGames()
DataAccess -> db: Delete GameData
Service -> DataAccess: removeAllUsers()
DataAccess -> db: Delete users
Service-> DataAccess: removeAllAuth()
DataAccess -> db: Delete AuthToken
Service --> Handler: ClearResult
Handler --> Server: { }
Server -->Client: 200 \n { }
end
